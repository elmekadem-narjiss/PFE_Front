name: Frontend Build with Sonar

on:
  push:
    branches: [main]
    paths:
      - '**'
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
    paths:
      - '**'
  workflow_dispatch:

env:
  NODE_VERSION: '22'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Dependencies
        run: npm install
      - name: Build Frontend
        run: npm run build
      - name: Check Build Output
        run: ls -la .next/ || echo "Build output not found"

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Dependencies
        run: npm install
      - name: Run Unit Tests with Jest
        run: npx jest --testPathPattern=unit --coverage --coverageReporters=lcov
      - name: Check Coverage Output
        run: |
          ls -la coverage/ && cat coverage/lcov.info || echo "Coverage report not generated"

  integration:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Dependencies
        run: npm install
      - name: Run Integration Tests with Jest
        run: npx jest --testPathPattern=integration --coverage --coverageReporters=lcov
      - name: Check Coverage Output
        run: |
          ls -la coverage/ && cat coverage/lcov.info || echo "Coverage report not generated"

  performance:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Dependencies
        run: npm install
      - name: Run Lighthouse Performance Audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000/todolist
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
        env:
          NODE_ENV: production
