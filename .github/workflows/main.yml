name: Frontend Build with Sonar

on:
  push:
    branches: [main]
    paths:
      - '**'
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
    paths:
      - '**'
  workflow_dispatch:

env:
  NODE_VERSION: '22'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm install
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-
      - name: Create Temporary Next.js Config
        run: |
          cat << EOF > next.config.js
          export default {
            telemetry: false,
            webpack(config, { isServer }) {
              // Modify CSS loader to allow global selectors
              const rules = config.module.rules.find((rule) => 
                Array.isArray(rule.oneOf)
              ).oneOf;
              
              rules.forEach((rule) => {
                if (rule.test && rule.test.toString().includes('.module.css')) {
                  rule.use.forEach((use) => {
                    if (use.loader && use.loader.includes('css-loader')) {
                      use.options = {
                        ...use.options,
                        modules: {
                          ...use.options.modules,
                          mode: 'global',
                        },
                      };
                    }
                  });
                }
              });
              
              return config;
            },
          };
          EOF
      - name: Build Frontend
        run: npm run build
      - name: Check Build Output
        run: ls -la .next/ || echo "Build output not found"

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm install
      - name: Run Tests with Jest
        run: npx jest --coverage --coverageReporters=lcov
      - name: Check Coverage Output
        run: |
          ls -la coverage/ && cat coverage/lcov.info || echo "Coverage report not generated"

  typescript:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm install
      - name: Run TypeScript Check
        run: npx tsc --noEmit

  sonarcloud:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm install
      - name: Install SonarScanner
        run: npm install -g sonar-scanner
      - name: Run SonarCloud Scan
        run: |
          sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN_FRONT }} \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.analysis.mode=publish \
            -Dsonar.inclusions=**/*.ts,**/*.tsx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
